type Approval @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  approved: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ApprovalForAll @entity(immutable: true) {
  id: Bytes!
  owner: Bytes! # address
  operator: Bytes! # address
  approved: Boolean! # bool
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type BadgeEarned @entity(immutable: true) {
  id: Bytes!
  donor: Bytes! # address
  badgeType: String! # string
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CauseCreated @entity(immutable: true) {
  id: Bytes!
  causeName: String! # string
  description: String! # string
  beneficiary: Bytes! # address
  targetAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type CauseTargetReached @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  finalAmount: BigInt! # uint256
  donorCount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type DonationReceived @entity(immutable: true) {
  id: Bytes!
  donor: Bytes! # address
  cause: String! # string
  amount: BigInt! # uint256
  impactScore: BigInt! # uint256
  timestamp: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type FundsWithdrawn @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  beneficiary: Bytes! # address
  amount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type ImpactScoreUpdated @entity(immutable: true) {
  id: Bytes!
  donor: Bytes! # address
  newScore: BigInt! # uint256
  cause: String! # string
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MilestoneAdded @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  description: String! # string
  targetAmount: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type MilestoneCompleted @entity(immutable: true) {
  id: Bytes!
  cause: String! # string
  milestoneIndex: BigInt! # uint256
  completionTime: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type OwnershipTransferred @entity(immutable: true) {
  id: Bytes!
  previousOwner: Bytes! # address
  newOwner: Bytes! # address
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}

type Transfer @entity(immutable: true) {
  id: Bytes!
  from: Bytes! # address
  to: Bytes! # address
  tokenId: BigInt! # uint256
  blockNumber: BigInt!
  blockTimestamp: BigInt!
  transactionHash: Bytes!
}
